
global_costmap:
  global_costmap:
    ros__parameters:
      update_frequency: 1.0
      publish_frequency: 1.0
      global_frame: map
      robot_base_frame: base_link
      use_sim_time: True
      robot_radius: 0.35
      resolution: 0.05
      track_unknown_space: true
      plugins: ["static_layer","inflation_layer"]
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: True
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        enabled: true
        inflation_radius: 0.2
        cost_scaling_factor: 1.0
        inflate_unknown: false
        inflate_around_unknown: true
      always_send_full_costmap: True


local_costmap:
  local_costmap:
    ros__parameters:
      update_frequency: 5.0
      publish_frequency: 2.0
      global_frame: odom
      robot_base_frame: base_footprint
      use_sim_time: True
      rolling_window: true
      width: 5
      height: 5
      resolution: 0.05
      robot_radius: 0.35
      plugins: ["static_layer","inflation_layer"]
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: True
        enabled: true
        subscribe_to_updates: true
        transform_tolerance: 0.1
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        enabled: true
        inflation_radius: 0.2
        cost_scaling_factor: 1.0
        inflate_unknown: false
        inflate_around_unknown: true
      always_send_full_costmap: True

bt_navigator:
  ros__parameters:
    use_sim_time: True
    global_frame: map
    robot_base_frame: base_footprint
    odom_topic: /odometry/filtered
    bt_loop_duration: 10
    default_server_timeout: 20
    default_nav_to_pose_bt_xml: $(find-pkg-share robotname_navigation)/config/follow.xml
    # 'default_nav_through_poses_bt_xml' and 'default_nav_to_pose_bt_xml' are use defaults:
    # nav2_bt_navigator/navigate_to_pose_w_replanning_and_recovery.xml
    # nav2_bt_navigator/navigate_through_poses_w_replanning_and_recovery.xml
    # They can be set here or via a RewrittenYaml remap from a parent launch file to Nav2.
    plugin_lib_names:
    - nav2_compute_path_to_pose_action_bt_node
    - nav2_compute_path_through_poses_action_bt_node
    - nav2_smooth_path_action_bt_node
    - nav2_follow_path_action_bt_node
    - nav2_spin_action_bt_node
    - nav2_wait_action_bt_node
    - nav2_assisted_teleop_action_bt_node
    - nav2_back_up_action_bt_node
    - nav2_drive_on_heading_bt_node
    - nav2_clear_costmap_service_bt_node
    - nav2_is_stuck_condition_bt_node
    - nav2_goal_reached_condition_bt_node
    - nav2_goal_updated_condition_bt_node
    - nav2_globally_updated_goal_condition_bt_node
    - nav2_is_path_valid_condition_bt_node
    - nav2_initial_pose_received_condition_bt_node
    - nav2_reinitialize_global_localization_service_bt_node
    - nav2_rate_controller_bt_node
    - nav2_distance_controller_bt_node
    - nav2_speed_controller_bt_node
    - nav2_truncate_path_action_bt_node
    - nav2_truncate_path_local_action_bt_node
    - nav2_goal_updater_node_bt_node
    - nav2_recovery_node_bt_node
    - nav2_pipeline_sequence_bt_node
    - nav2_round_robin_node_bt_node
    - nav2_transform_available_condition_bt_node
    - nav2_time_expired_condition_bt_node
    - nav2_path_expiring_timer_condition
    - nav2_distance_traveled_condition_bt_node
    - nav2_single_trigger_bt_node
    - nav2_goal_updated_controller_bt_node
    - nav2_is_battery_low_condition_bt_node
    - nav2_navigate_through_poses_action_bt_node
    - nav2_navigate_to_pose_action_bt_node
    - nav2_remove_passed_goals_action_bt_node
    - nav2_planner_selector_bt_node
    - nav2_controller_selector_bt_node
    - nav2_goal_checker_selector_bt_node
    - nav2_controller_cancel_bt_node
    - nav2_path_longer_on_approach_bt_node
    - nav2_wait_cancel_bt_node
    - nav2_spin_cancel_bt_node
    - nav2_back_up_cancel_bt_node
    - nav2_assisted_teleop_cancel_bt_node
    - nav2_drive_on_heading_cancel_bt_node

bt_navigator_navigate_through_poses_rclcpp_node:
  ros__parameters:
    use_sim_time: True

bt_navigator_navigate_to_pose_rclcpp_node:
  ros__parameters:
    use_sim_time: True

map_server:
  ros__parameters:
    use_sim_time: False
    # Overridden in launch by the "map" launch configuration or provided default value.
    # To use in yaml, remove the default "map" value in the tb3_simulation_launch.py file & provide full path to map below.
    yaml_filename: ""

map_saver:
  ros__parameters:
    use_sim_time: False
    save_map_timeout: 5.0
    free_thresh_default: 0.25
    occupied_thresh_default: 0.65
    map_subscribe_transient_local: True
    
# controller_server:
#   ros__parameters:
#     use_sim_time: True
#     controller_frequency: 20.0

#     min_x_velocity_threshold: 0.001
#     min_y_velocity_threshold: 0.001
#     min_theta_velocity_threshold: 0.001
#     failure_tolerance: 0.3
#     progress_checker_plugin: "progress_checker"
#     goal_checker_plugins: ["general_goal_checker"] # "precise_goal_checker"

#     # Progress checker parameters
#     progress_checker:
#       plugin: "nav2_controller::SimpleProgressChecker"
#       required_movement_radius: 0.5
#       movement_time_allowance: 10.0
#     # Goal checker parameters
#     #precise_goal_checker:
#     #  plugin: "nav2_controller::SimpleGoalChecker"
#     #  xy_goal_tolerance: 0.25
#     #  yaw_goal_tolerance: 0.25
#     #  stateful: True
#     general_goal_checker:
#       stateful: True
#       plugin: "nav2_controller::SimpleGoalChecker"
#       xy_goal_tolerance: 0.1
#       yaw_goal_tolerance: 0.1

#     FollowPath:
#       # plugin: "nav2_rotation_shim_controller::RotationShimController"
#       #primary_controller: "nav2_mppi_controller::MPPIController"
#       plugin: "nav2_mppi_controller::MPPIController"
#       # Rotation shim controller
#       # angular_dist_threshold: 0.785
#       # forward_sampling_distance: 0.5
#       # rotate_to_heading_angular_vel: 1.8
#       # max_angular_accel: 3.2
#       # simulate_ahead_time: 1.0

#       # MPPI controller
#       time_steps: 40 #56
#       model_dt: 0.05
#       batch_size: 1000
#       vx_std: 0.5
#       vy_std: 0.5
#       wz_std: 0.5
#       vx_max: 2.0
#       vx_min: -2.0
#       vy_max: 2.0
#       wz_max: 2.0
#       iteration_count: 1
#       prune_distance: 1.7
#       transform_tolerance: 0.1
#       temperature: 0.3
#       gamma: 0.015
#       motion_model: "Omni"
#       visualize: true
#       reset_period: 1.0 # (only in Humble)
#       regenerate_noises: false
#       TrajectoryVisualizer:
#         trajectory_step: 5
#         time_step: 3
#       critics: ["ConstraintCritic", "ObstaclesCritic", "GoalCritic", "GoalAngleCritic", "PathAlignCritic", "PathFollowCritic", "PathAngleCritic", "PreferForwardCritic","TwirlingCritic"]
#       ConstraintCritic:
#         enabled: true
#         cost_power: 1
#         cost_weight: 4.0
#       GoalCritic:
#         enabled: true
#         cost_power: 1
#         cost_weight: 5.0 #5.0
#         threshold_to_consider: 1.4
#       GoalAngleCritic:
#         enabled: true
#         cost_power: 1
#         cost_weight: 5.0 #3.0
#         threshold_to_consider: 0.5
#       PreferForwardCritic:
#         enabled: true
#         cost_power: 1
#         cost_weight: 10.0 #5.0
#         threshold_to_consider: 0.5 #0.5
#       ObstaclesCritic:
#         enabled: true
#         cost_power: 1
#         repulsion_weight: 1.5
#         critical_weight: 20.0
#         consider_footprint: true
#         collision_cost: 10000.0
#         collision_margin_distance: 0.5
#         near_goal_distance: 0.5
#         inflation_radius: 0.55 # (only in Humble)
#         cost_scaling_factor: 10.0 # (only in Humble)
#       PathAlignCritic:
#         enabled: true
#         cost_power: 1
#         cost_weight: 5.0 #14.0
#         max_path_occupancy_ratio: 0.05
#         trajectory_point_step: 3
#         threshold_to_consider: 0.5
#         offset_from_furthest: 20
#         use_path_orientations: false
#       PathFollowCritic:
#         enabled: true
#         cost_power: 1
#         cost_weight: 10.0 #5.0
#         offset_from_furthest: 5
#         threshold_to_consider: 1.4
#       PathAngleCritic:
#         enabled: false
#         cost_power: 1
#         cost_weight: 2.0
#         offset_from_furthest: 4
#         threshold_to_consider: 0.5
#         max_angle_to_furthest: 1.0
#         mode: 0
#       TwirlingCritic:
#         enabled: false
#         twirling_cost_power: 1
#         twirling_cost_weight: 1.0

# controller_server:
#   ros__parameters:
#     # controller server parameters (see Controller Server for more info)
#     use_sim_time: True
#     controller_frequency: 50.0
#     min_x_velocity_threshold: 0.001
#     min_y_velocity_threshold: 0.5
#     min_theta_velocity_threshold: 0.001
#     progress_checker_plugins: ["progress_checker"] # progress_checker_plugin: "progress_checker" For Humble and older
#     goal_checker_plugins: ["goal_checker"]
#     controller_plugins: ["FollowPath"]
#     progress_checker:
#       plugin: "nav2_controller::SimpleProgressChecker"
#       required_movement_radius: 0.5
#       movement_time_allowance: 10.0
#     goal_checker:
#       plugin: "nav2_controller::SimpleGoalChecker"
#       xy_goal_tolerance: 0.05
#       yaw_goal_tolerance: 0.05
#       stateful: True
#     # DWB controller parameters
#     FollowPath:
#       plugin: "dwb_core::DWBLocalPlanner"
#       debug_trajectory_details: True
#       min_vel_x: 0.0
#       min_vel_y: 0.0
#       max_vel_x: 1.0
#       max_vel_y: 0.0
#       max_vel_theta: 1.0
#       min_speed_xy: 0.0
#       max_speed_xy: 1.0
#       min_speed_theta: 0.0
#       acc_lim_x: 2.5
#       acc_lim_y: 0.0
#       acc_lim_theta: 3.2
#       decel_lim_x: -2.5
#       decel_lim_y: 0.0
#       decel_lim_theta: -3.2
#       vx_samples: 20
#       vy_samples: 5
#       vtheta_samples: 20
#       sim_time: 1.7
#       linear_granularity: 0.05
#       angular_granularity: 0.05
#       transform_tolerance: 0.1
#       xy_goal_tolerance: 0.05
#       trans_stopped_velocity: 0.25
#       short_circuit_trajectory_evaluation: False
#       stateful: True
#       critics: ["RotateToGoal", "Oscillation", "BaseObstacle", "GoalAlign", "PathAlign", "PathDist", "GoalDist"]
#       BaseObstacle.scale: 0.02
#       PathAlign.scale: 32.0
#       GoalAlign.scale: 24.0
#       PathAlign.forward_point_distance: 0.1
#       GoalAlign.forward_point_distance: 0.1
#       PathDist.scale: 32.0
#       GoalDist.scale: 24.0
#       RotateToGoal.scale: 32.0
#       RotateToGoal.slowing_factor: 5.0
#       RotateToGoal.lookahead_time: -1.0

controller_server:
  ros__parameters:
    use_sim_time: True
    controller_frequency: 50.0
    min_x_velocity_threshold: 0.001
    min_y_velocity_threshold: 0.5
    min_theta_velocity_threshold: 0.001
    progress_checker_plugins: ["progress_checker"] # progress_checker_plugin: "progress_checker" For Humble and older
    goal_checker_plugins: ["goal_checker"]
    controller_plugins: ["FollowPath"]

    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.5
      movement_time_allowance: 10.0
    goal_checker:
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.05
      yaw_goal_tolerance: 0.05
      stateful: True
    FollowPath:
      plugin: "nav2_rotation_shim_controller::RotationShimController"
      primary_controller: "nav2_regulated_pure_pursuit_controller::RegulatedPurePursuitController"

      desired_linear_vel: 1.0
      lookahead_dist: 0.6
      min_lookahead_dist: 0.6
      max_lookahead_dist: 1.5
      lookahead_time: 2.0
      rotate_to_heading_angular_vel: 1.5
      transform_tolerance: 0.1
      use_velocity_scaled_lookahead_dist: true
      min_approach_linear_velocity: 0.05
      approach_velocity_scaling_dist: 0.6
      use_collision_detection: true
      max_allowed_time_to_collision_up_to_carrot: 1.0
      use_regulated_linear_velocity_scaling: true
      use_fixed_curvature_lookahead: false
      curvature_lookahead_dist: 0.25
      use_cost_regulated_linear_velocity_scaling: false
      regulated_linear_scaling_min_radius: 0.9
      regulated_linear_scaling_min_speed: 0.25
      use_rotate_to_heading: true
      allow_reversing: false
      rotate_to_heading_min_angle: 0.785
      max_angular_accel: 2.0
      max_robot_pose_search_dist: 10.0

# controller_server:
#   ros__parameters:
#     # controller server parameters (see Controller Server for more info)
#     use_sim_time: True
#     controller_plugins: ["FollowPath"]
#     controller_frequency: 30.0
#     controller_plugin_types: ["neo_mpc_planner::NeoMpcPlanner"]
#     goal_checker_plugins: ["general_goal_checker"]
#     progress_checker:
#       plugin: "nav2_controller::SimpleProgressChecker"
#       required_movement_radius: 0.5
#       movement_time_allowance: 100.0
#     general_goal_checker:
#       plugin: "nav2_controller::SimpleGoalChecker"
#       xy_goal_tolerance: 0.03
#       yaw_goal_tolerance: 0.03
#       stateful: True
#     FollowPath:
#       plugin: "neo_mpc_planner::NeoMpcPlanner"
#       lookahead_dist_min: 0.4
#       lookahead_dist_max: 0.4
#       lookahead_dist_close_to_goal: 0.4
#       control_steps: 3


# controller_server:
#   ros__parameters:
#     use_sim_time: True
#     controller_frequency: 50.0 #20.0

#     min_x_velocity_threshold: 0.001
#     min_y_velocity_threshold: 0.001
#     min_theta_velocity_threshold: 0.001
#     failure_tolerance: 0.3
#     progress_checker_plugin: "progress_checker"
#     goal_checker_plugins: ["general_goal_checker"] # "precise_goal_checker"

#     # Progress checker parameters
#     progress_checker:
#       plugin: "nav2_controller::SimpleProgressChecker"
#       required_movement_radius: 0.5
#       movement_time_allowance: 10.0
#     # Goal checker parameters
#     #precise_goal_checker:
#     #  plugin: "nav2_controller::SimpleGoalChecker"
#     #  xy_goal_tolerance: 0.25
#     #  yaw_goal_tolerance: 0.25
#     #  stateful: True
#     general_goal_checker:
#       stateful: True
#       plugin: "nav2_controller::SimpleGoalChecker"
#       xy_goal_tolerance: 0.1
#       yaw_goal_tolerance: 0.1

#     FollowPath:
#       # plugin: "nav2_rotation_shim_controller::RotationShimController"
#       #primary_controller: "nav2_mppi_controller::MPPIController"
#       plugin: "nav2_mppi_controller::MPPIController"
#       # Rotation shim controller
#       # angular_dist_threshold: 0.785
#       # forward_sampling_distance: 0.5
#       # rotate_to_heading_angular_vel: 1.8
#       # max_angular_accel: 3.2
#       # simulate_ahead_time: 1.0

#       # MPPI controller
#       time_steps: 56 #56
#       model_dt: 0.05
#       batch_size: 1000
#       vx_std: 0.5
#       vy_std: 0.5
#       wz_std: 0.5
#       vx_max: 2.0
#       vx_min: -2.0
#       vy_max: 2.0
#       wz_max: 2.0
#       iteration_count: 1
#       prune_distance: 1.5
#       transform_tolerance: 0.1
#       temperature: 0.3
#       gamma: 0.015
#       motion_model: "Omni"
#       visualize: true
#       reset_period: 1.0 # (only in Humble)
#       regenerate_noises: false
#       TrajectoryVisualizer:
#         trajectory_step: 5
#         time_step: 3
#       critics: ["ConstraintCritic", "ObstaclesCritic", "GoalCritic", "GoalAngleCritic", "PathAlignCritic", "PathFollowCritic", "PathAngleCritic", "PreferForwardCritic","TwirlingCritic"]
#       ConstraintCritic:
#         enabled: true
#         cost_power: 1
#         cost_weight: 4.0
#       GoalCritic:
#         enabled: true
#         cost_power: 1
#         cost_weight: 5.0 #5.0
#         threshold_to_consider: 1.4
#       GoalAngleCritic:
#         enabled: true
#         cost_power: 1
#         cost_weight: 3.0 #3.0
#         threshold_to_consider: 0.5
#       PreferForwardCritic:
#         enabled: false
#         cost_power: 1
#         cost_weight: 10.0 #5.0
#         threshold_to_consider: 0.5 #0.5
#       ObstaclesCritic:
#         enabled: true
#         cost_power: 1
#         repulsion_weight: 1.5
#         critical_weight: 20.0
#         consider_footprint: true
#         collision_cost: 10000.0
#         collision_margin_distance: 0.5
#         near_goal_distance: 0.5
#         inflation_radius: 0.55 # (only in Humble)
#         cost_scaling_factor: 10.0 # (only in Humble)
#       PathAlignCritic:
#         enabled: true
#         cost_power: 1
#         cost_weight: 10.0 #14.0
#         max_path_occupancy_ratio: 0.05
#         trajectory_point_step: 3
#         threshold_to_consider: 0.5
#         offset_from_furthest: 20
#         use_path_orientations: false
#       PathFollowCritic:
#         enabled: true
#         cost_power: 1
#         cost_weight: 10.0 #5.0
#         offset_from_furthest: 5
#         threshold_to_consider: 1.4
#       PathAngleCritic:
#         enabled: false
#         cost_power: 1
#         cost_weight: 2.0
#         offset_from_furthest: 4
#         threshold_to_consider: 0.5
#         max_angle_to_furthest: 1.0
#         mode: 0
#       TwirlingCritic:
#         enabled: false
#         twirling_cost_power: 1
#         twirling_cost_weight: 1.0

# local_costmap:
#   local_costmap:
#     ros__parameters:
#       update_frequency: 5.0
#       publish_frequency: 2.0
#       global_frame: odom
#       robot_base_frame: base_footprint
#       use_sim_time: True
#       rolling_window: true
#       width: 3
#       height: 3
#       resolution: 0.06
#       footprint: "[ [0.175, 0.16], [-0.175, 0.16], [-0.175, -0.16], [0.175, -0.16] ]"
#       plugins: ["static_layer", "voxel_layer", "inflation_layer"]
#       inflation_layer:
#         plugin: "nav2_costmap_2d::InflationLayer"
#         cost_scaling_factor: 4.0
#         inflation_radius: 0.45
#       voxel_layer:
#         plugin: "nav2_costmap_2d::VoxelLayer"
#         enabled: True
#         publish_voxel_map: True
#         origin_z: 0.0
#         z_resolution: 0.05
#         z_voxels: 16
#         max_obstacle_height: 2.0
#         mark_threshold: 0
#         observation_sources: scan
#         scan:
#           topic: scan
#           max_obstacle_height: 2.0
#           clearing: True
#           marking: True
#           data_type: "LaserScan"
#           raytrace_max_range: 3.0
#           raytrace_min_range: 0.0
#           obstacle_max_range: 2.5
#           obstacle_min_range: 0.0
#       static_layer:
#         plugin: "nav2_costmap_2d::StaticLayer"
#         map_subscribe_transient_local: True
#       always_send_full_costmap: True

# global_costmap:
#   global_costmap:
#     ros__parameters:
#       update_frequency: 1.0
#       publish_frequency: 1.0
#       global_frame: map
#       robot_base_frame: base_footprint
#       use_sim_time: True
#       footprint: "[ [0.175, 0.16], [-0.175, 0.16], [-0.175, -0.16], [0.175, -0.16] ]"
#       resolution: 0.06
#       track_unknown_space: true
#       plugins: ["static_layer", "obstacle_layer", "inflation_layer"]
#       obstacle_layer:
#         plugin: "nav2_costmap_2d::ObstacleLayer"
#         enabled: True
#         observation_sources: scan
#         scan:
#           topic: scan
#           max_obstacle_height: 2.0
#           clearing: True
#           marking: True
#           data_type: "LaserScan"
#           raytrace_max_range: 3.0
#           raytrace_min_range: 0.0
#           obstacle_max_range: 2.5
#           obstacle_min_range: 0.0
#       static_layer:
#         plugin: "nav2_costmap_2d::StaticLayer"
#         map_subscribe_transient_local: True
#       inflation_layer:
#         plugin: "nav2_costmap_2d::InflationLayer"
#         cost_scaling_factor: 3.0
#         inflation_radius: 1.75
#       always_send_full_costmap: True

planner_server:
  ros__parameters:
    expected_planner_frequency: 10.0
    use_sim_time: True
    planner_plugins: ["GridBased"]
    GridBased:
      plugin: "nav2_navfn_planner/NavfnPlanner"
      tolerance: 0.5
      use_astar: false
      allow_unknown: true

# controller_server:
#   ros__parameters:
#     # controller server parameters (see Controller Server for more info)
#     controller_plugins: ["FollowPath"]
#     controller_frequency: 100.0
#     controller_plugin_types: ["neo_local_planner::NeoLocalPlanner"]
#     goal_checker_plugins: ["general_goal_checker"]
#     progress_checker_plugin: "progress_checker"
#     use_sim_time: True
#     progress_checker:
#       plugin: "nav2_controller::SimpleProgressChecker"
#       required_movement_radius: 0.5
#       movement_time_allowance: 10.0
#     general_goal_checker:
#       plugin: "nav2_controller::SimpleGoalChecker"
#       xy_goal_tolerance: 0.05
#       yaw_goal_tolerance: 0.05
#       stateful: True
#     FollowPath:
#       plugin: "neo_local_planner::NeoLocalPlanner"
#       acc_lim_x : 0.25
#       acc_lim_y : 0.25
#       acc_lim_theta : 0.8
#       max_vel_x : 0.8
#       min_vel_x : -0.2
#       max_vel_y : 0.5
#       min_vel_y : -0.5
#       max_rot_vel : 0.8
#       min_rot_vel : -0.8
#       max_trans_vel : 0.8
#       min_trans_vel : 0.1
#       yaw_goal_tolerance : 0.005
#       xy_goal_tolerance : 0.01
#       goal_tune_time : 0.5
#       lookahead_time : 0.4
#       lookahead_dist : 1.0
#       start_yaw_error : 0.5
#       pos_x_gain : 1.0
#       pos_y_gain : 1.0
#       static_yaw_gain : 3.0
#       cost_x_gain : 0.1
#       cost_y_gain : 0.1
#       cost_y_lookahead_dist : 0.0
#       cost_y_lookahead_time : 0.3
#       cost_yaw_gain : 2.0
#       low_pass_gain : 0.2
#       max_cost : 0.95
#       max_curve_vel : 0.4
#       max_goal_dist : 0.5
#       max_backup_dist : 0.0
#       min_stop_dist : 0.2
#       differential_drive : false
#       allow_reversing: false


smoother_server:
  ros__parameters:
    use_sim_time: True
    smoother_plugins: ["simple_smoother"]
    simple_smoother:
      plugin: "nav2_smoother::SimpleSmoother"
      tolerance: 1.0e-10
      max_its: 1000
      do_refinement: True

behavior_server:
  ros__parameters:
    costmap_topic: /local_costmap/costmap_raw
    footprint_topic: /local_costmap/published_footprint
    cycle_frequency: 10.0
    behavior_plugins: ["spin", "backup", "drive_on_heading", "assisted_teleop", "wait"]
    spin:
      plugin: "nav2_behaviors/Spin"
    backup:
      plugin: "nav2_behaviors/BackUp"
    drive_on_heading:
      plugin: "nav2_behaviors/DriveOnHeading"
    wait:
      plugin: "nav2_behaviors/Wait"
    assisted_teleop:
      plugin: "nav2_behaviors/AssistedTeleop"
    global_frame: map
    robot_base_frame: base_footprint
    transform_tolerance: 0.1
    use_sim_time: true
    simulate_ahead_time: 2.0
    max_rotational_vel: 6.0
    min_rotational_vel: 0.4
    rotational_acc_lim: 6.0

robot_state_publisher:
  ros__parameters:
    use_sim_time: True

waypoint_follower:
  ros__parameters:
    use_sim_time: True
    loop_rate: 20
    stop_on_failure: false
    waypoint_task_executor_plugin: "wait_at_waypoint"
    wait_at_waypoint:
      plugin: "nav2_waypoint_follower::WaitAtWaypoint"
      enabled: True
      waypoint_pause_duration: 200

velocity_smoother:
  ros__parameters:
    use_sim_time: True
    smoothing_frequency: 20.0
    scale_velocities: False
    feedback: "OPEN_LOOP"
    max_velocity: [2.5, 2.5, 2.5]
    min_velocity: [-2.5, -2.5, -2.5]
    max_accel: [1.0, 1.0, 1.0]
    max_decel: [-1.0, -1.0, -1.0]
    odom_topic: "/odometry/filtered"
    odom_duration: 0.1
    deadband_velocity: [0.0, 0.0, 0.0]
    velocity_timeout: 1.0